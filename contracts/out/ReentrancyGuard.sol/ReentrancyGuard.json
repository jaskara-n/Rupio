{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/core-v3/=lib/protocol-v3/\",\":@api3/contracts/=lib/contracts/contracts/\",\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol/\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solidity-bytes-utils/=lib/solidity-bytes-utils/\",\":@uniswap/v3-core/=node_modules/@uniswap/v3-core/\",\":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":layerzero-v2/=lib/layerzero-v2/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@aave/core-v3/=lib/protocol-v3/","@api3/contracts/=lib/contracts/contracts/","@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol/","@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/","@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/","@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solidity-bytes-utils/=lib/solidity-bytes-utils/","@uniswap/v3-core/=node_modules/@uniswap/v3-core/","@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","layerzero-v2/=lib/layerzero-v2/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":45486,"contract":"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol","id":45545,"exportedSymbols":{"ReentrancyGuard":[45544]},"nodeType":"SourceUnit","src":"109:3131:73","nodes":[{"id":45477,"nodeType":"PragmaDirective","src":"109:24:73","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":45544,"nodeType":"ContractDefinition","src":"886:2353:73","nodes":[{"id":45481,"nodeType":"VariableDeclaration","src":"1674:40:73","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:73","scope":45544,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":45480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:73","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":45484,"nodeType":"VariableDeclaration","src":"1720:36:73","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:73","scope":45544,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":45483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:73","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":45486,"nodeType":"VariableDeclaration","src":"1763:23:73","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:73","scope":45544,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":45489,"nodeType":"ErrorDefinition","src":"1850:37:73","nodes":[],"documentation":{"id":45487,"nodeType":"StructuredDocumentation","src":"1793:52:73","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:73","parameters":{"id":45488,"nodeType":"ParameterList","parameters":[],"src":"1884:2:73"}},{"id":45497,"nodeType":"FunctionDefinition","src":"1893:52:73","nodes":[],"body":{"id":45496,"nodeType":"Block","src":"1907:38:73","nodes":[],"statements":[{"expression":{"id":45494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45492,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45486,"src":"1917:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45493,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45481,"src":"1927:11:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45495,"nodeType":"ExpressionStatement","src":"1917:21:73"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":45490,"nodeType":"ParameterList","parameters":[],"src":"1904:2:73"},"returnParameters":{"id":45491,"nodeType":"ParameterList","parameters":[],"src":"1907:0:73"},"scope":45544,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":45508,"nodeType":"ModifierDefinition","src":"2322:103:73","nodes":[],"body":{"id":45507,"nodeType":"Block","src":"2346:79:73","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":45500,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45524,"src":"2356:19:73","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":45501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:73","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45502,"nodeType":"ExpressionStatement","src":"2356:21:73"},{"id":45503,"nodeType":"PlaceholderStatement","src":"2387:1:73"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":45504,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45532,"src":"2398:18:73","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":45505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:73","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45506,"nodeType":"ExpressionStatement","src":"2398:20:73"}]},"documentation":{"id":45498,"nodeType":"StructuredDocumentation","src":"1951:366:73","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:73","parameters":{"id":45499,"nodeType":"ParameterList","parameters":[],"src":"2343:2:73"},"virtual":false,"visibility":"internal"},{"id":45524,"nodeType":"FunctionDefinition","src":"2431:307:73","nodes":[],"body":{"id":45523,"nodeType":"Block","src":"2470:268:73","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":45511,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45486,"src":"2558:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":45512,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45484,"src":"2569:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:73","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":45518,"nodeType":"IfStatement","src":"2554:86:73","trueBody":{"id":45517,"nodeType":"Block","src":"2578:62:73","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":45514,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45489,"src":"2599:28:73","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":45515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:73","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":45516,"nodeType":"RevertStatement","src":"2592:37:73"}]}},{"expression":{"id":45521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45519,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45486,"src":"2714:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45520,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45484,"src":"2724:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45522,"nodeType":"ExpressionStatement","src":"2714:17:73"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:73","parameters":{"id":45509,"nodeType":"ParameterList","parameters":[],"src":"2459:2:73"},"returnParameters":{"id":45510,"nodeType":"ParameterList","parameters":[],"src":"2470:0:73"},"scope":45544,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":45532,"nodeType":"FunctionDefinition","src":"2744:208:73","nodes":[],"body":{"id":45531,"nodeType":"Block","src":"2782:170:73","nodes":[],"statements":[{"expression":{"id":45529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":45527,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45486,"src":"2924:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":45528,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45481,"src":"2934:11:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45530,"nodeType":"ExpressionStatement","src":"2924:21:73"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:73","parameters":{"id":45525,"nodeType":"ParameterList","parameters":[],"src":"2771:2:73"},"returnParameters":{"id":45526,"nodeType":"ParameterList","parameters":[],"src":"2782:0:73"},"scope":45544,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":45543,"nodeType":"FunctionDefinition","src":"3131:106:73","nodes":[],"body":{"id":45542,"nodeType":"Block","src":"3195:42:73","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":45540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":45538,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45486,"src":"3212:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":45539,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45484,"src":"3223:7:73","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:73","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":45537,"id":45541,"nodeType":"Return","src":"3205:25:73"}]},"documentation":{"id":45533,"nodeType":"StructuredDocumentation","src":"2958:168:73","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:73","parameters":{"id":45534,"nodeType":"ParameterList","parameters":[],"src":"3163:2:73"},"returnParameters":{"id":45537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":45543,"src":"3189:4:73","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45535,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:73","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:73"},"scope":45544,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":45478,"nodeType":"StructuredDocumentation","src":"135:750:73","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[45544],"name":"ReentrancyGuard","nameLocation":"904:15:73","scope":45545,"usedErrors":[45489],"usedEvents":[]}],"license":"MIT"},"id":73}