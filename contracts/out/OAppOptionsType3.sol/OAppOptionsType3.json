{"abi":[{"type":"function","name":"combineOptions","inputs":[{"name":"_eid","type":"uint32","internalType":"uint32"},{"name":"_msgType","type":"uint16","internalType":"uint16"},{"name":"_extraOptions","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"enforcedOptions","inputs":[{"name":"eid","type":"uint32","internalType":"uint32"},{"name":"msgType","type":"uint16","internalType":"uint16"}],"outputs":[{"name":"enforcedOption","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnforcedOptions","inputs":[{"name":"_enforcedOptions","type":"tuple[]","internalType":"struct EnforcedOptionParam[]","components":[{"name":"eid","type":"uint32","internalType":"uint32"},{"name":"msgType","type":"uint16","internalType":"uint16"},{"name":"options","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"EnforcedOptionSet","inputs":[{"name":"_enforcedOptions","type":"tuple[]","indexed":false,"internalType":"struct EnforcedOptionParam[]","components":[{"name":"eid","type":"uint32","internalType":"uint32"},{"name":"msgType","type":"uint16","internalType":"uint16"},{"name":"options","type":"bytes","internalType":"bytes"}]}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"InvalidOptions","inputs":[{"name":"options","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"combineOptions(uint32,uint16,bytes)":"bc70b354","enforcedOptions(uint32,uint16)":"5535d461","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setEnforcedOptions((uint32,uint16,bytes)[])":"b98bd070","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"InvalidOptions\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"msgType\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct EnforcedOptionParam[]\",\"name\":\"_enforcedOptions\",\"type\":\"tuple[]\"}],\"name\":\"EnforcedOptionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_msgType\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_extraOptions\",\"type\":\"bytes\"}],\"name\":\"combineOptions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"msgType\",\"type\":\"uint16\"}],\"name\":\"enforcedOptions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"enforcedOption\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"msgType\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"internalType\":\"struct EnforcedOptionParam[]\",\"name\":\"_enforcedOptions\",\"type\":\"tuple[]\"}],\"name\":\"setEnforcedOptions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the IOAppOptionsType3 interface with type 3 options.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"combineOptions(uint32,uint16,bytes)\":{\"details\":\"If there is an enforced lzReceive option: - {gasLimit: 200k, msg.value: 1 ether} AND a caller supplies a lzReceive option: {gasLimit: 100k, msg.value: 0.5 ether} - The resulting options will be {gasLimit: 300k, msg.value: 1.5 ether} when the message is executed on the remote lzReceive() function.This presence of duplicated options is handled off-chain in the verifier/executor.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_extraOptions\":\"Additional options passed by the caller.\",\"_msgType\":\"The OAPP message type.\"},\"returns\":{\"_0\":\"options The combination of caller specified options AND enforced options.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setEnforcedOptions((uint32,uint16,bytes)[])\":{\"details\":\"Sets the enforced options for specific endpoint and message type combinations.Only the owner/admin of the OApp can call this function.Provides a way for the OApp to enforce things like paying for PreCrime, AND/OR minimum dst lzReceive gas amounts etc.These enforced options can vary as the potential options/execution on the remote may differ as per the msgType. eg. Amount of lzReceive() gas necessary to deliver a lzCompose() message adds overhead you dont want to pay if you are only making a standard LayerZero message ie. lzReceive() WITHOUT sendCompose().\",\"params\":{\"_enforcedOptions\":\"An array of EnforcedOptionParam structures specifying enforced options.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OAppOptionsType3\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"combineOptions(uint32,uint16,bytes)\":{\"notice\":\"Combines options for a given endpoint and message type.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol\":\"OAppOptionsType3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/core-v3/=lib/protocol-v3/\",\":@api3/contracts/=lib/contracts/contracts/\",\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol/\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solidity-bytes-utils/=lib/solidity-bytes-utils/\",\":@uniswap/v3-core/=node_modules/@uniswap/v3-core/\",\":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":layerzero-v2/=lib/layerzero-v2/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol\":{\"keccak256\":\"0x9fc08a51e9d7c9c710c4eb26f84fe77228305ad7da63fa486ff24ebf2f3bc461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e2eea8a93bb9fc3f629767118b362e9b4bda2443ff95eae21c6a894f3e334cc\",\"dweb:/ipfs/QmPRRNjAB4U19ke4gr3U7ZJGtdcVBxdXVBZ2BmB1riFkP7\"]},\"lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol\":{\"keccak256\":\"0x5275636cd47e660a2fdf6c7fe9d41ff3cc866b785cc8a9d88c1b8ca983509f01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a59dd6e3cfcc332f45a13d44585eb228588c4b9d470cbb19852df5753a4571af\",\"dweb:/ipfs/QmQJF1QU3MKhvmw42eq61u9z3bzKJJKMsEdQVYyPyYgTVS\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"options","type":"bytes"}],"type":"error","name":"InvalidOptions"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"struct EnforcedOptionParam[]","name":"_enforcedOptions","type":"tuple[]","components":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint16","name":"msgType","type":"uint16"},{"internalType":"bytes","name":"options","type":"bytes"}],"indexed":false}],"type":"event","name":"EnforcedOptionSet","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"uint16","name":"_msgType","type":"uint16"},{"internalType":"bytes","name":"_extraOptions","type":"bytes"}],"stateMutability":"view","type":"function","name":"combineOptions","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint16","name":"msgType","type":"uint16"}],"stateMutability":"view","type":"function","name":"enforcedOptions","outputs":[{"internalType":"bytes","name":"enforcedOption","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"struct EnforcedOptionParam[]","name":"_enforcedOptions","type":"tuple[]","components":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint16","name":"msgType","type":"uint16"},{"internalType":"bytes","name":"options","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"setEnforcedOptions"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"combineOptions(uint32,uint16,bytes)":{"details":"If there is an enforced lzReceive option: - {gasLimit: 200k, msg.value: 1 ether} AND a caller supplies a lzReceive option: {gasLimit: 100k, msg.value: 0.5 ether} - The resulting options will be {gasLimit: 300k, msg.value: 1.5 ether} when the message is executed on the remote lzReceive() function.This presence of duplicated options is handled off-chain in the verifier/executor.","params":{"_eid":"The endpoint ID.","_extraOptions":"Additional options passed by the caller.","_msgType":"The OAPP message type."},"returns":{"_0":"options The combination of caller specified options AND enforced options."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setEnforcedOptions((uint32,uint16,bytes)[])":{"details":"Sets the enforced options for specific endpoint and message type combinations.Only the owner/admin of the OApp can call this function.Provides a way for the OApp to enforce things like paying for PreCrime, AND/OR minimum dst lzReceive gas amounts etc.These enforced options can vary as the potential options/execution on the remote may differ as per the msgType. eg. Amount of lzReceive() gas necessary to deliver a lzCompose() message adds overhead you dont want to pay if you are only making a standard LayerZero message ie. lzReceive() WITHOUT sendCompose().","params":{"_enforcedOptions":"An array of EnforcedOptionParam structures specifying enforced options."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"combineOptions(uint32,uint16,bytes)":{"notice":"Combines options for a given endpoint and message type."}},"version":1}},"settings":{"remappings":["@aave/core-v3/=lib/protocol-v3/","@api3/contracts/=lib/contracts/contracts/","@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol/","@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/","@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/","@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solidity-bytes-utils/=lib/solidity-bytes-utils/","@uniswap/v3-core/=node_modules/@uniswap/v3-core/","@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","layerzero-v2/=lib/layerzero-v2/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol":"OAppOptionsType3"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol":{"keccak256":"0x9fc08a51e9d7c9c710c4eb26f84fe77228305ad7da63fa486ff24ebf2f3bc461","urls":["bzz-raw://2e2eea8a93bb9fc3f629767118b362e9b4bda2443ff95eae21c6a894f3e334cc","dweb:/ipfs/QmPRRNjAB4U19ke4gr3U7ZJGtdcVBxdXVBZ2BmB1riFkP7"],"license":"MIT"},"lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol":{"keccak256":"0x5275636cd47e660a2fdf6c7fe9d41ff3cc866b785cc8a9d88c1b8ca983509f01","urls":["bzz-raw://a59dd6e3cfcc332f45a13d44585eb228588c4b9d470cbb19852df5753a4571af","dweb:/ipfs/QmQJF1QU3MKhvmw42eq61u9z3bzKJJKMsEdQVYyPyYgTVS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":43971,"contract":"lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol:OAppOptionsType3","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1105,"contract":"lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol:OAppOptionsType3","label":"enforcedOptions","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_mapping(t_uint16,t_bytes_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint32,t_mapping(t_uint16,t_bytes_storage))":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => mapping(uint16 => bytes))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_bytes_storage)"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"ast":{"absolutePath":"lib/devtools/packages/oapp-evm/contracts/oapp/libs/OAppOptionsType3.sol","id":1249,"exportedSymbols":{"EnforcedOptionParam":[1031],"IOAppOptionsType3":[1063],"OAppOptionsType3":[1248],"Ownable":[44110]},"nodeType":"SourceUnit","src":"33:4865:16","nodes":[{"id":1086,"nodeType":"PragmaDirective","src":"33:24:16","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":1088,"nodeType":"ImportDirective","src":"59:69:16","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","nameLocation":"-1:-1:-1","scope":1249,"sourceUnit":44111,"symbolAliases":[{"foreign":{"id":1087,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44110,"src":"68:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1091,"nodeType":"ImportDirective","src":"129:93:16","nodes":[],"absolutePath":"lib/devtools/packages/oapp-evm/contracts/oapp/interfaces/IOAppOptionsType3.sol","file":"../interfaces/IOAppOptionsType3.sol","nameLocation":"-1:-1:-1","scope":1249,"sourceUnit":1064,"symbolAliases":[{"foreign":{"id":1089,"name":"IOAppOptionsType3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"138:17:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1090,"name":"EnforcedOptionParam","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"157:19:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1248,"nodeType":"ContractDefinition","src":"351:4546:16","nodes":[{"id":1099,"nodeType":"VariableDeclaration","src":"422:42:16","nodes":[],"constant":true,"mutability":"constant","name":"OPTION_TYPE_3","nameLocation":"447:13:16","scope":1248,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1097,"name":"uint16","nodeType":"ElementaryTypeName","src":"422:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"463:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"id":1105,"nodeType":"VariableDeclaration","src":"538:93:16","nodes":[],"constant":false,"functionSelector":"5535d461","mutability":"mutable","name":"enforcedOptions","nameLocation":"616:15:16","scope":1248,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_mapping$_t_uint16_$_t_bytes_storage_$_$","typeString":"mapping(uint32 => mapping(uint16 => bytes))"},"typeName":{"id":1104,"keyName":"eid","keyNameLocation":"553:3:16","keyType":{"id":1100,"name":"uint32","nodeType":"ElementaryTypeName","src":"546:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Mapping","src":"538:70:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_mapping$_t_uint16_$_t_bytes_storage_$_$","typeString":"mapping(uint32 => mapping(uint16 => bytes))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1103,"keyName":"msgType","keyNameLocation":"575:7:16","keyType":{"id":1101,"name":"uint16","nodeType":"ElementaryTypeName","src":"568:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"560:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"valueName":"enforcedOption","valueNameLocation":"592:14:16","valueType":{"id":1102,"name":"bytes","nodeType":"ElementaryTypeName","src":"586:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}}},"visibility":"public"},{"id":1120,"nodeType":"FunctionDefinition","src":"1391:156:16","nodes":[],"body":{"id":1119,"nodeType":"Block","src":"1493:54:16","nodes":[],"statements":[{"expression":{"arguments":[{"id":1116,"name":"_enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"1523:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_calldata_ptr_$dyn_calldata_ptr","typeString":"struct EnforcedOptionParam calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_calldata_ptr_$dyn_calldata_ptr","typeString":"struct EnforcedOptionParam calldata[] calldata"}],"id":1115,"name":"_setEnforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1503:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (struct EnforcedOptionParam memory[] memory)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1503:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"ExpressionStatement","src":"1503:37:16"}]},"baseFunctions":[1050],"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"638:748:16","text":" @dev Sets the enforced options for specific endpoint and message type combinations.\n @param _enforcedOptions An array of EnforcedOptionParam structures specifying enforced options.\n @dev Only the owner/admin of the OApp can call this function.\n @dev Provides a way for the OApp to enforce things like paying for PreCrime, AND/OR minimum dst lzReceive gas amounts etc.\n @dev These enforced options can vary as the potential options/execution on the remote may differ as per the msgType.\n eg. Amount of lzReceive() gas necessary to deliver a lzCompose() message adds overhead you dont want to pay\n if you are only making a standard LayerZero message ie. lzReceive() WITHOUT sendCompose()."},"functionSelector":"b98bd070","implemented":true,"kind":"function","modifiers":[{"id":1113,"kind":"modifierInvocation","modifierName":{"id":1112,"name":"onlyOwner","nameLocations":["1483:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":44021,"src":"1483:9:16"},"nodeType":"ModifierInvocation","src":"1483:9:16"}],"name":"setEnforcedOptions","nameLocation":"1400:18:16","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"_enforcedOptions","nameLocation":"1450:16:16","nodeType":"VariableDeclaration","scope":1120,"src":"1419:47:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_calldata_ptr_$dyn_calldata_ptr","typeString":"struct EnforcedOptionParam[]"},"typeName":{"baseType":{"id":1108,"nodeType":"UserDefinedTypeName","pathNode":{"id":1107,"name":"EnforcedOptionParam","nameLocations":["1419:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"1419:19:16"},"referencedDeclaration":1031,"src":"1419:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_EnforcedOptionParam_$1031_storage_ptr","typeString":"struct EnforcedOptionParam"}},"id":1109,"nodeType":"ArrayTypeName","src":"1419:21:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_storage_$dyn_storage_ptr","typeString":"struct EnforcedOptionParam[]"}},"visibility":"internal"}],"src":"1418:49:16"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"1493:0:16"},"scope":1248,"stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":1170,"nodeType":"FunctionDefinition","src":"2237:514:16","nodes":[],"body":{"id":1169,"nodeType":"Block","src":"2330:421:16","nodes":[],"statements":[{"body":{"id":1163,"nodeType":"Block","src":"2394:300:16","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1140,"name":"_enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2542:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr","typeString":"struct EnforcedOptionParam memory[] memory"}},"id":1142,"indexExpression":{"id":1141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2559:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2542:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_EnforcedOptionParam_$1031_memory_ptr","typeString":"struct EnforcedOptionParam memory"}},"id":1143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2562:7:16","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"2542:27:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1139,"name":"_assertOptionsType3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2522:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2522:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"2522:48:16"},{"expression":{"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1146,"name":"enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2584:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_mapping$_t_uint16_$_t_bytes_storage_$_$","typeString":"mapping(uint32 => mapping(uint16 => bytes storage ref))"}},"id":1155,"indexExpression":{"expression":{"baseExpression":{"id":1147,"name":"_enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2600:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr","typeString":"struct EnforcedOptionParam memory[] memory"}},"id":1149,"indexExpression":{"id":1148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2617:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2600:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_EnforcedOptionParam_$1031_memory_ptr","typeString":"struct EnforcedOptionParam memory"}},"id":1150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2620:3:16","memberName":"eid","nodeType":"MemberAccess","referencedDeclaration":1026,"src":"2600:23:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2584:40:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":1156,"indexExpression":{"expression":{"baseExpression":{"id":1151,"name":"_enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2625:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr","typeString":"struct EnforcedOptionParam memory[] memory"}},"id":1153,"indexExpression":{"id":1152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2642:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2625:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_EnforcedOptionParam_$1031_memory_ptr","typeString":"struct EnforcedOptionParam memory"}},"id":1154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2645:7:16","memberName":"msgType","nodeType":"MemberAccess","referencedDeclaration":1028,"src":"2625:27:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2584:69:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1157,"name":"_enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2656:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr","typeString":"struct EnforcedOptionParam memory[] memory"}},"id":1159,"indexExpression":{"id":1158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2673:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2656:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_EnforcedOptionParam_$1031_memory_ptr","typeString":"struct EnforcedOptionParam memory"}},"id":1160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2676:7:16","memberName":"options","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"2656:27:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2584:99:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1162,"nodeType":"ExpressionStatement","src":"2584:99:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2360:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1133,"name":"_enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2364:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr","typeString":"struct EnforcedOptionParam memory[] memory"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2381:6:16","memberName":"length","nodeType":"MemberAccess","src":"2364:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2360:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"initializationExpression":{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"i","nameLocation":"2353:1:16","nodeType":"VariableDeclaration","scope":1164,"src":"2345:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1131,"initialValue":{"hexValue":"30","id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2357:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2345:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2389:3:16","subExpression":{"id":1136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2389:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1138,"nodeType":"ExpressionStatement","src":"2389:3:16"},"nodeType":"ForStatement","src":"2340:354:16"},{"eventCall":{"arguments":[{"id":1166,"name":"_enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"2727:16:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr","typeString":"struct EnforcedOptionParam memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr","typeString":"struct EnforcedOptionParam memory[] memory"}],"id":1165,"name":"EnforcedOptionSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2709:17:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (struct EnforcedOptionParam memory[] memory)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2709:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"EmitStatement","src":"2704:40:16"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"1553:679:16","text":" @dev Sets the enforced options for specific endpoint and message type combinations.\n @param _enforcedOptions An array of EnforcedOptionParam structures specifying enforced options.\n @dev Provides a way for the OApp to enforce things like paying for PreCrime, AND/OR minimum dst lzReceive gas amounts etc.\n @dev These enforced options can vary as the potential options/execution on the remote may differ as per the msgType.\n eg. Amount of lzReceive() gas necessary to deliver a lzCompose() message adds overhead you dont want to pay\n if you are only making a standard LayerZero message ie. lzReceive() WITHOUT sendCompose()."},"implemented":true,"kind":"function","modifiers":[],"name":"_setEnforcedOptions","nameLocation":"2246:19:16","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"_enforcedOptions","nameLocation":"2295:16:16","nodeType":"VariableDeclaration","scope":1170,"src":"2266:45:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_memory_ptr_$dyn_memory_ptr","typeString":"struct EnforcedOptionParam[]"},"typeName":{"baseType":{"id":1123,"nodeType":"UserDefinedTypeName","pathNode":{"id":1122,"name":"EnforcedOptionParam","nameLocations":["2266:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"2266:19:16"},"referencedDeclaration":1031,"src":"2266:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_EnforcedOptionParam_$1031_storage_ptr","typeString":"struct EnforcedOptionParam"}},"id":1124,"nodeType":"ArrayTypeName","src":"2266:21:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EnforcedOptionParam_$1031_storage_$dyn_storage_ptr","typeString":"struct EnforcedOptionParam[]"}},"visibility":"internal"}],"src":"2265:47:16"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"2330:0:16"},"scope":1248,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":1228,"nodeType":"FunctionDefinition","src":"3510:981:16","nodes":[],"body":{"id":1227,"nodeType":"Block","src":"3667:824:16","nodes":[],"statements":[{"assignments":[1183],"declarations":[{"constant":false,"id":1183,"mutability":"mutable","name":"enforced","nameLocation":"3690:8:16","nodeType":"VariableDeclaration","scope":1227,"src":"3677:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1182,"name":"bytes","nodeType":"ElementaryTypeName","src":"3677:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1189,"initialValue":{"baseExpression":{"baseExpression":{"id":1184,"name":"enforcedOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"3701:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_mapping$_t_uint16_$_t_bytes_storage_$_$","typeString":"mapping(uint32 => mapping(uint16 => bytes storage ref))"}},"id":1186,"indexExpression":{"id":1185,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"3717:4:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3701:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":1188,"indexExpression":{"id":1187,"name":"_msgType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"3723:8:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3701:31:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3677:55:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1190,"name":"enforced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"3861:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:16","memberName":"length","nodeType":"MemberAccess","src":"3861:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3880:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3861:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"3857:46:16","trueBody":{"expression":{"id":1194,"name":"_extraOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"3890:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1181,"id":1195,"nodeType":"Return","src":"3883:20:16"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1197,"name":"_extraOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"3964:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3978:6:16","memberName":"length","nodeType":"MemberAccess","src":"3964:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3988:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3964:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"nodeType":"IfStatement","src":"3960:46:16","trueBody":{"expression":{"id":1201,"name":"enforced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"3998:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1181,"id":1202,"nodeType":"Return","src":"3991:15:16"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1204,"name":"_extraOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4129:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4143:6:16","memberName":"length","nodeType":"MemberAccess","src":"4129:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4153:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4129:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1222,"nodeType":"IfStatement","src":"4125:267:16","trueBody":{"id":1221,"nodeType":"Block","src":"4156:236:16","statements":[{"expression":{"arguments":[{"id":1209,"name":"_extraOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4190:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1208,"name":"_assertOptionsType3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4170:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4170:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"ExpressionStatement","src":"4170:34:16"},{"expression":{"arguments":[{"id":1215,"name":"enforced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"4353:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"baseExpression":{"id":1216,"name":"_extraOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4363:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4363:17:16","startExpression":{"hexValue":"32","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4377:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"expression":{"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4340:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1212,"name":"bytes","nodeType":"ElementaryTypeName","src":"4340:5:16","typeDescriptions":{}}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4346:6:16","memberName":"concat","nodeType":"MemberAccess","src":"4340:12:16","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4340:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1181,"id":1220,"nodeType":"Return","src":"4333:48:16"}]}},{"errorCall":{"arguments":[{"id":1224,"name":"_extraOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4470:13:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1223,"name":"InvalidOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4455:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$_t_error_$","typeString":"function (bytes memory) pure returns (error)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4455:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1226,"nodeType":"RevertStatement","src":"4448:36:16"}]},"baseFunctions":[1062],"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"2757:748:16","text":" @notice Combines options for a given endpoint and message type.\n @param _eid The endpoint ID.\n @param _msgType The OAPP message type.\n @param _extraOptions Additional options passed by the caller.\n @return options The combination of caller specified options AND enforced options.\n @dev If there is an enforced lzReceive option:\n - {gasLimit: 200k, msg.value: 1 ether} AND a caller supplies a lzReceive option: {gasLimit: 100k, msg.value: 0.5 ether}\n - The resulting options will be {gasLimit: 300k, msg.value: 1.5 ether} when the message is executed on the remote lzReceive() function.\n @dev This presence of duplicated options is handled off-chain in the verifier/executor."},"functionSelector":"bc70b354","implemented":true,"kind":"function","modifiers":[],"name":"combineOptions","nameLocation":"3519:14:16","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"_eid","nameLocation":"3550:4:16","nodeType":"VariableDeclaration","scope":1228,"src":"3543:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1172,"name":"uint32","nodeType":"ElementaryTypeName","src":"3543:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"_msgType","nameLocation":"3571:8:16","nodeType":"VariableDeclaration","scope":1228,"src":"3564:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1174,"name":"uint16","nodeType":"ElementaryTypeName","src":"3564:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"_extraOptions","nameLocation":"3604:13:16","nodeType":"VariableDeclaration","scope":1228,"src":"3589:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1176,"name":"bytes","nodeType":"ElementaryTypeName","src":"3589:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3533:90:16"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1228,"src":"3653:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1179,"name":"bytes","nodeType":"ElementaryTypeName","src":"3653:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3652:14:16"},"scope":1248,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":1247,"nodeType":"FunctionDefinition","src":"4631:264:16","nodes":[],"body":{"id":1246,"nodeType":"Block","src":"4705:190:16","nodes":[],"statements":[{"assignments":[1235],"declarations":[{"constant":false,"id":1235,"mutability":"mutable","name":"optionsType","nameLocation":"4722:11:16","nodeType":"VariableDeclaration","scope":1246,"src":"4715:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1234,"name":"uint16","nodeType":"ElementaryTypeName","src":"4715:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":1236,"nodeType":"VariableDeclarationStatement","src":"4715:18:16"},{"AST":{"nativeSrc":"4752:62:16","nodeType":"YulBlock","src":"4752:62:16","statements":[{"nativeSrc":"4766:38:16","nodeType":"YulAssignment","src":"4766:38:16","value":{"arguments":[{"arguments":[{"name":"_options","nativeSrc":"4791:8:16","nodeType":"YulIdentifier","src":"4791:8:16"},{"kind":"number","nativeSrc":"4801:1:16","nodeType":"YulLiteral","src":"4801:1:16","type":"","value":"2"}],"functionName":{"name":"add","nativeSrc":"4787:3:16","nodeType":"YulIdentifier","src":"4787:3:16"},"nativeSrc":"4787:16:16","nodeType":"YulFunctionCall","src":"4787:16:16"}],"functionName":{"name":"mload","nativeSrc":"4781:5:16","nodeType":"YulIdentifier","src":"4781:5:16"},"nativeSrc":"4781:23:16","nodeType":"YulFunctionCall","src":"4781:23:16"},"variableNames":[{"name":"optionsType","nativeSrc":"4766:11:16","nodeType":"YulIdentifier","src":"4766:11:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1231,"isOffset":false,"isSlot":false,"src":"4791:8:16","valueSize":1},{"declaration":1235,"isOffset":false,"isSlot":false,"src":"4766:11:16","valueSize":1}],"id":1237,"nodeType":"InlineAssembly","src":"4743:71:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"optionsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"4827:11:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1239,"name":"OPTION_TYPE_3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4842:13:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"4827:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1245,"nodeType":"IfStatement","src":"4823:65:16","trueBody":{"errorCall":{"arguments":[{"id":1242,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4879:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1241,"name":"InvalidOptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4864:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$_t_error_$","typeString":"function (bytes memory) pure returns (error)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4864:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1244,"nodeType":"RevertStatement","src":"4857:31:16"}}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"4497:129:16","text":" @dev Internal function to assert that options are of type 3.\n @param _options The options to be checked."},"implemented":true,"kind":"function","modifiers":[],"name":"_assertOptionsType3","nameLocation":"4640:19:16","parameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"_options","nameLocation":"4673:8:16","nodeType":"VariableDeclaration","scope":1247,"src":"4660:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1230,"name":"bytes","nodeType":"ElementaryTypeName","src":"4660:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4659:23:16"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[],"src":"4705:0:16"},"scope":1248,"stateMutability":"pure","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":1093,"name":"IOAppOptionsType3","nameLocations":["389:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":1063,"src":"389:17:16"},"id":1094,"nodeType":"InheritanceSpecifier","src":"389:17:16"},{"baseName":{"id":1095,"name":"Ownable","nameLocations":["408:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":44110,"src":"408:7:16"},"id":1096,"nodeType":"InheritanceSpecifier","src":"408:7:16"}],"canonicalName":"OAppOptionsType3","contractDependencies":[],"contractKind":"contract","documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"224:126:16","text":" @title OAppOptionsType3\n @dev Abstract contract implementing the IOAppOptionsType3 interface with type 3 options."},"fullyImplemented":true,"linearizedBaseContracts":[1248,44110,45475,1063],"name":"OAppOptionsType3","nameLocation":"369:16:16","scope":1249,"usedErrors":[1036,43976,43981],"usedEvents":[1042,43987]}],"license":"MIT"},"id":16}