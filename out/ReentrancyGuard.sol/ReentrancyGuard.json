{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@aave/core-v3/=lib/protocol-v3/\",\":@api3/contracts/=lib/contracts/contracts/\",\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=node_modules/@uniswap/v3-core/\",\":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@aave/core-v3/=lib/protocol-v3/","@api3/contracts/=lib/contracts/contracts/","@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=node_modules/@uniswap/v3-core/","@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol","id":40421,"exportedSymbols":{"ReentrancyGuard":[40420]},"nodeType":"SourceUnit","src":"109:3131:36","nodes":[{"id":40353,"nodeType":"PragmaDirective","src":"109:24:36","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":40420,"nodeType":"ContractDefinition","src":"886:2353:36","nodes":[{"id":40357,"nodeType":"VariableDeclaration","src":"1674:40:36","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:36","scope":40420,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":40356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:36","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":40360,"nodeType":"VariableDeclaration","src":"1720:36:36","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:36","scope":40420,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":40359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:36","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":40362,"nodeType":"VariableDeclaration","src":"1763:23:36","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:36","scope":40420,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":40365,"nodeType":"ErrorDefinition","src":"1850:37:36","nodes":[],"documentation":{"id":40363,"nodeType":"StructuredDocumentation","src":"1793:52:36","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:36","parameters":{"id":40364,"nodeType":"ParameterList","parameters":[],"src":"1884:2:36"}},{"id":40373,"nodeType":"FunctionDefinition","src":"1893:52:36","nodes":[],"body":{"id":40372,"nodeType":"Block","src":"1907:38:36","nodes":[],"statements":[{"expression":{"id":40370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40368,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40362,"src":"1917:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40369,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40357,"src":"1927:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40371,"nodeType":"ExpressionStatement","src":"1917:21:36"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":40366,"nodeType":"ParameterList","parameters":[],"src":"1904:2:36"},"returnParameters":{"id":40367,"nodeType":"ParameterList","parameters":[],"src":"1907:0:36"},"scope":40420,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":40384,"nodeType":"ModifierDefinition","src":"2322:103:36","nodes":[],"body":{"id":40383,"nodeType":"Block","src":"2346:79:36","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40376,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40400,"src":"2356:19:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":40377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40378,"nodeType":"ExpressionStatement","src":"2356:21:36"},{"id":40379,"nodeType":"PlaceholderStatement","src":"2387:1:36"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40380,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40408,"src":"2398:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":40381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40382,"nodeType":"ExpressionStatement","src":"2398:20:36"}]},"documentation":{"id":40374,"nodeType":"StructuredDocumentation","src":"1951:366:36","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:36","parameters":{"id":40375,"nodeType":"ParameterList","parameters":[],"src":"2343:2:36"},"virtual":false,"visibility":"internal"},{"id":40400,"nodeType":"FunctionDefinition","src":"2431:307:36","nodes":[],"body":{"id":40399,"nodeType":"Block","src":"2470:268:36","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":40389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":40387,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40362,"src":"2558:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":40388,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40360,"src":"2569:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":40394,"nodeType":"IfStatement","src":"2554:86:36","trueBody":{"id":40393,"nodeType":"Block","src":"2578:62:36","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":40390,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40365,"src":"2599:28:36","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":40391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":40392,"nodeType":"RevertStatement","src":"2592:37:36"}]}},{"expression":{"id":40397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40395,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40362,"src":"2714:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40396,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40360,"src":"2724:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40398,"nodeType":"ExpressionStatement","src":"2714:17:36"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:36","parameters":{"id":40385,"nodeType":"ParameterList","parameters":[],"src":"2459:2:36"},"returnParameters":{"id":40386,"nodeType":"ParameterList","parameters":[],"src":"2470:0:36"},"scope":40420,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":40408,"nodeType":"FunctionDefinition","src":"2744:208:36","nodes":[],"body":{"id":40407,"nodeType":"Block","src":"2782:170:36","nodes":[],"statements":[{"expression":{"id":40405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40403,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40362,"src":"2924:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40404,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40357,"src":"2934:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40406,"nodeType":"ExpressionStatement","src":"2924:21:36"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:36","parameters":{"id":40401,"nodeType":"ParameterList","parameters":[],"src":"2771:2:36"},"returnParameters":{"id":40402,"nodeType":"ParameterList","parameters":[],"src":"2782:0:36"},"scope":40420,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":40419,"nodeType":"FunctionDefinition","src":"3131:106:36","nodes":[],"body":{"id":40418,"nodeType":"Block","src":"3195:42:36","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":40416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":40414,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40362,"src":"3212:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":40415,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40360,"src":"3223:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":40413,"id":40417,"nodeType":"Return","src":"3205:25:36"}]},"documentation":{"id":40409,"nodeType":"StructuredDocumentation","src":"2958:168:36","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:36","parameters":{"id":40410,"nodeType":"ParameterList","parameters":[],"src":"3163:2:36"},"returnParameters":{"id":40413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40419,"src":"3189:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":40411,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:36"},"scope":40420,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":40354,"nodeType":"StructuredDocumentation","src":"135:750:36","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[40420],"name":"ReentrancyGuard","nameLocation":"904:15:36","scope":40421,"usedErrors":[40365],"usedEvents":[]}],"license":"MIT"},"id":36}